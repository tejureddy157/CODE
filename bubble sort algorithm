Algorithm for bubble sort

Step 1: Start with the outer loop iterating from i = 0 to n - 2. This loop determines how many passes (or iterations) are needed.
Step 2: Inside the outer loop, use another loop (inner loop) from j = 0 to n - i - 2. This loop compares adjacent pairs of elements.
Step 3: Within the inner loop, compare arr[j] with arr[j + 1].
Step 4: If arr[j] is greater than arr[j + 1], swap these two elements using the swap() function.
Step 5: Continue this process until the end of the inner loop. After each pass of the outer loop, the largest unsorted element will be correctly positioned at the end.
Step 6: Repeat steps 1-5 until no more swaps are needed (i.e., the array is sorted).
